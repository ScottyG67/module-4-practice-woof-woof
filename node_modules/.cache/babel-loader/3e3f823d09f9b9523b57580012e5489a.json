{"ast":null,"code":"var _jsxFileName = \"/Users/Scott/Flatiron/code/Phase_4/10_Additional_Practice/module-4-practice-woof-woof/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport './components/PupsBar';\nimport PupsBar from './components/PupsBar';\nimport Pup from './components/Pup';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      renderPup: false,\n      pups: [],\n      filter: false\n    };\n\n    this.findPup = pupId => {\n      // const pup = this.state.pups.find(pup => pup.id === pupId)\n      this.setState({\n        renderPup: pupId\n      });\n    };\n\n    this.toggleGoodDog = pupId => {\n      const pup = this.state.pups.find(pup => pup.id === pupId);\n      pup.isGoodDog = !pup.isGoodDog;\n      let reqObj = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"PATCH\",\n        body: JSON.stringify(pup)\n      };\n      fetch('http://localhost:3000/pups/' + pup.id, reqObj).then(res => res.json()).then(updatedPup => {\n        const index = this.state.pups.findIndex(existingPup => existingPup.id === updatedPup.id);\n        const previousState = this.state.pups;\n        previousState[index] = updatedPup;\n        this.setState({\n          pups: previousState\n        });\n        this.setState({\n          renderPup: updatedPup.id\n        });\n      });\n    };\n\n    this.pupDetail = id => {\n      return this.state.pups.find(pup => pup.id === id);\n    };\n\n    this.toggleFilterDogs = () => {\n      this.setState(previousState => {\n        return {\n          filter: !previousState.filter\n        };\n      });\n    };\n\n    this.renderPupList = () => {\n      let pupList = this.state.pups;\n      this.state.filter ? pupList.filter(pup => pup.isGoodDog === true) : null;\n      return pupList.map(pup => React.createElement(PupsBar, {\n        pup: pup,\n        key: pup.id,\n        showPup: this.findPup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/pups').then(res => res.json()).then(pupList => this.setState({\n      pups: pupList\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"filter-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"good-dog-filter\",\n      onClick: this.toggleFilterDogs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Filter good dogs: \", this.state.filter ? 'ON' : 'OFF')), React.createElement(\"div\", {\n      id: \"dog-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.renderPupList()), React.createElement(\"div\", {\n      id: \"dog-summary-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"DOGGO:\"), React.createElement(\"div\", {\n      id: \"dog-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.state.renderPup ? React.createElement(Pup, {\n      pup: this.pupDetail(this.state.renderPup),\n      toggleGoodDog: this.toggleGoodDog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }) : null)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Scott/Flatiron/code/Phase_4/10_Additional_Practice/module-4-practice-woof-woof/src/App.js"],"names":["React","PupsBar","Pup","App","Component","state","renderPup","pups","filter","findPup","pupId","setState","toggleGoodDog","pup","find","id","isGoodDog","reqObj","headers","method","body","JSON","stringify","fetch","then","res","json","updatedPup","index","findIndex","existingPup","previousState","pupDetail","toggleFilterDogs","renderPupList","pupList","map","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport './components/PupsBar'\nimport PupsBar from './components/PupsBar';\nimport Pup from './components/Pup'\n\nclass App extends React.Component {\n  state= {\n    renderPup:false,\n    pups:[],\n    filter:false\n  }\n\n  componentDidMount(){\n    fetch('http://localhost:3000/pups').then(res=>res.json()).then(pupList=>this.setState({pups:pupList}))\n  }\n\n  findPup=(pupId)=>{\n    // const pup = this.state.pups.find(pup => pup.id === pupId)\n    this.setState({renderPup: pupId})\n  }\n\n  toggleGoodDog = (pupId) => {\n    const pup = this.state.pups.find(pup => pup.id === pupId)\n    pup.isGoodDog = !pup.isGoodDog\n\n    let reqObj = {\n      headers: { \"Content-Type\": \"application/json\" },\n      method: \"PATCH\",\n      body: JSON.stringify(pup),\n    };\n\n    fetch('http://localhost:3000/pups/' + pup.id, reqObj)\n      .then((res) => res.json())\n      .then(updatedPup => {\n        const index = this.state.pups.findIndex((existingPup) => existingPup.id === updatedPup.id)\n        const previousState = this.state.pups\n        previousState[index] = updatedPup\n        this.setState({pups: previousState})\n        this.setState({renderPup: updatedPup.id})\n      })\n  }\n\n  pupDetail = (id) => {\n    return this.state.pups.find(pup => pup.id === id)\n  }\n\n  toggleFilterDogs = () => {\n    this.setState(previousState => {return {filter:!previousState.filter}})\n  }\n\n  renderPupList = () => {\n    let pupList = this.state.pups\n    this.state.filter ? pupList.filter(pup => pup.isGoodDog===true):null\n\n    return pupList.map(pup => <PupsBar pup={pup} key={pup.id} showPup={this.findPup}/>)\n  }\n\n\n\n\n  \n  render(){\n  return (\n      <div className=\"App\">\n        <div id=\"filter-div\">\n          <button id=\"good-dog-filter\" onClick={this.toggleFilterDogs}>Filter good dogs: {this.state.filter? 'ON':'OFF'}</button>\n        </div>\n        <div id=\"dog-bar\">\n          {this.renderPupList()}\n        </div>\n        <div id=\"dog-summary-container\">\n          <h1>DOGGO:</h1>\n          <div id=\"dog-info\">\n            {this.state.renderPup ? <Pup pup={this.pupDetail(this.state.renderPup)} toggleGoodDog={this.toggleGoodDog} />:null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}